#!/bin/bash -e
##############################################################
# Functions for reports
# author Fabian Buske

################################################################################
# define functions for generating summary scaffold

# NGSANE_REPORT_HEADER takes 4 parameters
# $1=MOD description
# $2=MOD (e.g. $TASK_BWA)
# $3=pipeline mod script (e.g. bwa.sh)
# $4=result file suffix (e.g. asb.bwa)
# $5=output location if different to the default ($TASK)

function NGSANE_REPORT_HEADER {
    LINKS=$LINKS" $2"   
    echo "<div class='panel' id='$2_panel'><div class='tabs headbagb' id='$2_panel_tabs'><a name='$2'></a>
            <a class='selected' href='#$2_results'><h2 id='$2_h_results' class='sub'>$1</h2></a>
            <a href='#$2_checklist'><h2 id='$2_h_checklist' class='sub inactive' rel='checklist'>Checklist<span class='counter'><span class='passed' id='$2_counter_checkpoints_passed'></span><span class='failed' id='$2_counter_checkpoints_failed'></span></span></h2></a>
            <a href='#$2_notes'><h2 id='$2_h_notes' class='sub inactive' rel='notes'>Notes<span class='counter'><span class='neutral' id='$2_counter_notes'></span></span></span></h2></a>
            <a href='#$2_errors'><h2 id='$2_h_errors' class='sub inactive' rel='notes'>Errors<span class='counter'><span class='errors' id='$2_counter_errors'></span></span></h2></a>
            <a href='#$2_logfiles'><h2 id='$2_h_logfiles' class='sub inactive' rel='errors'>Log files</h2></a>" >> $SUMMARYTMP
    if [ -n "$4" ]; then 
        SUFFIX="--filesuffix $4"; 
        echo "<a href='#$2_PRIMARY_RESULT_FILES'><h2 id='$2_h_nrfiles' class='sub inactive' rel='files'>Primary result files</h2></a>" >> $SUMMARYTMP
    fi
    echo "</div>" >> $SUMMARYTMP
    echo "QC - $2"
    #check of resultfiles are redirected into to a different folder

    if [ -n "$5" ]; then 
        RESULTLOCATION="--results-task $5"
    else 
        RESULTLOCATION=""
    fi
    
    ${NGSANE_BASE}/core/QC.sh --results-dir $OUT --html-file $4 --modscript $3 --log $QOUT --toolkit $CONFIG --task $2 $RESULTLOCATION $SUFFIX >> $SUMMARYTMP    
    grep -r '^\[CITE\]' $QOUT/$2/* >> $SUMMARYCITES
    echo "<div class='tabContent' id='DC_$2_results'><div>" >> $SUMMARYTMP   
} 

# NGSANE_REPORT_FOOTER takes 1 parameters
# $1=output file ($SUMMARYTMP)
function NGSANE_REPORT_FOOTER {
    echo "</div></div></div>" >> $SUMMARYTMP
}


# NGSANE_REPORT_HEADER takes 4 parameters
# $1=MOD (e.g. $TASK_BWA)
# $2=FILE SUFFIX (e.g. $ASD.bam.stats)
# $3=LINK (link to other html reports)
# $4..$x=COLUMNS (pattern or figures to appear in columns in the given order, starting with either "PATTERN:" or "FIGURE:")
function NGSANE_REPORT_TABLE {
    
}

# NGSANE_REPORT_GATHERDIRS takes 1 parameter
# $1=TASK (e.g. $TASK_BWA)
function NGSANE_REPORT_GATHERDIRS {
    vali=""
    for dir in ${DIR[@]}; do
        [ -d $OUT/${dir%%/*}/$1/ ] && vali=$vali" $OUT/${dir%%/*}/$1/"
    done
	echo $vali
}

# NGSANE_REPORT_GATHERDIRS takes 1 parameter
# $1=TASK (e.g. $TASK_BWA)
function NGSANE_REPORT_GATHERFASTQDIRS {
    vali=""
    if [ -n "$1" ]; then
        SUFFIX="_"$1/"
    else
        SUFFIX=""
    fi
    for dir in ${DIR[@]}; do
        vali=$vali" $OUT/fastq/${dir}$SUFFIX
    done
	echo $vali
}

# NGSANE_REPORT_GATHERDIRSAGGREGATE takes 1 parameter
# $1=TASK (e.g. $TASK_VAR)
function NGSANE_REPORT_GATHERDIRSAGGREGATE {
    vali=""
	for dir in ${DIR[@]}; do
	   [ -d $OUT/$1/${dir%%/*}/ ] && vali=$vali" $OUT/$1/${dir%%/*}/"
    done
	echo $vali
}

