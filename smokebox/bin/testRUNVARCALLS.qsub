#!/bin/bash

# the ngsane version to be tested needs to be loaded by hand
. $NGSANE_BASE/conf/header.sh
. bin/tmpl/configVarCall.txt

# direct or submitting?
if [[ -z "$SB_MODE" ]]; then
        if hash qsub 2>&- ; then SB_MODE="forcearmed"
        else
            SB_MODE="direct";
        fi
fi
echo "[NOTE] run in $SB_MODE mode $(date)"
################################################################################
#  BWA
################################################################################

# modify the template config file to flip the RUNBWA switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configBWA.txt"
cat bin/tmpl/configVarCall.txt | sed 's/RUNBWA=\"\"/RUNBWA=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryBWA\"/g' > tmp/configBWA.txt

# submit the BWA run to the cluster
JOBIDSBWA=$( trigger.sh tmp/configBWA.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSBWA)"

################################################################################
#  BAMANN
################################################################################

# modify the template config file to flip the BAMANN switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configBAMANN.txt"
cat bin/tmpl/configVarCall.txt | sed 's/RUNBAMANN=\"\"/RUNBAMANN=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryBAMANN\"/g' > tmp/configBAMANN.txt
echo QSUBEXTRA='$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSBWA//:/$QUEUEWAITSEP}\"" >>tmp/configBAMANN.txt

# submit the BAMANN run to the cluster
JOBIDSBAMANN=$( trigger.sh tmp/configBAMANN.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSBAMANN)"


################################################################################
#  RECALALN
################################################################################

# modify the template config file to flip the RUNRECALALN switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configRECALALN.txt"
cat bin/tmpl/configVarCall.txt | sed 's/RUNRECALALN=\"\"/RUNRECALALN=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryRECALALN\"/g' > tmp/configRECALALN.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSBWA//:/$QUEUEWAITSEP}\"" >>tmp/configRECALALN.txt

# submit the RECALALN run to the cluster
JOBIDSRECALALN=$( trigger.sh tmp/configRECALALN.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSRECALALN)"


################################################################################
#  VARCALL
################################################################################

# modify the template config file to flip the RUNGATKVAR switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configVARCALLS.txt"
cat bin/tmpl/configVarCall.txt | sed 's/RUNGATKVAR=\"\"/RUNGATKVAR=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryVARCALLS\"/g' > tmp/configVARCALLS.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSRECALALN//:/$QUEUEWAITSEP}\"" >>tmp/configVARCALLS.txt

# submit the VARCALLS run to the cluster
JOBIDSVARCALL=$( trigger.sh tmp/configVARCALLS.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSVARCALL)"


################################################################################
#  PINDEL
################################################################################

# modify the template config file to flip the RUNPINDEL switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configPINDEL.txt"
cat bin/tmpl/configVarCall.txt | sed 's/RUNPINDEL=\"\"/RUNPINDEL=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryPINDEL\"/g' > tmp/configPINDEL.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSRECALALN//:/$QUEUEWAITSEP}\"" >>tmp/configPINDEL.txt

# submit the VARCALLS run to the cluster
JOBIDSPINDEL=$( trigger.sh tmp/configPINDEL.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSPINDEL)"



################################################################################
# TEST
################################################################################
JOBIDS="$JOBIDSBAMANN:$JOBIDSVARCALL:$JOBIDSPINDEL" #other things

#PBS: Varcall does not complete the recalibration hence only after
QUEUEWAIT=${QUEUEWAIT/afterok/afterany}

HOLDID=" "$QUEUEWAIT${JOBIDS//:/$QUEUEWAITSEP}
cat bin/tmpl/configVarCall.txt | sed 's/RUNGATKVAR=\"\"/RUNGATKVAR=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryVARCALLS\"/g' | \
    sed 's/RUNBWA=\"\"/RUNBWA=\"1\"/g' | \
    sed 's/RUNBAMANN=\"\"/RUNBAMANN=\"1\"/g' | \
    sed 's/RUNPINDEL=\"\"/RUNPINDEL=\"1\"/g' | \
    sed 's/RUNRECALALN=\"\"/RUNRECALALN=\"1\"/g' > tmp/configVARCALLS.txt

# Prep and runare the job to generate the html result page and perform the diff 
echo "[NOTE] Prep and runare evaluation script tmp/testVARCALLS.qsub wait for $HOLDID"
sed 's/NAME/NGs_VARCALL/g' bin/tmpl/HPCheader.txt > tmp/testVARCALLS.qsub
echo "trigger.sh tmp/configVARCALLS.txt html" >> tmp/testVARCALLS.qsub
echo "diff result/SummaryVARCALLS.html result/expected/SummaryVARCALLS.html | \
	   python bin/diffparser.py > result/diffVARCALLS.txt" >> tmp/testVARCALLS.qsub
#      grep -v \"Last modi\" | grep -v \"\-\-\" | grep -v \"NGSANE\" | \
#      grep -v \"[NOTE]\" | \
#      grep -v \"[0-9]c[0-9]\" > result/diffVARCALLS.txt" >> tmp/testVARCALLS.qsub


chmod 777 tmp/testVARCALLS.qsub

#submit evaluation script
echo "[NOTE] submit or run evaluation script"
if [[ "$SUBMISSIONSYSTEM" = "SGE" ]]; then unset module; fi
if [[ "$SB_MODE" = "forcearmed" ]]; then
	qsub $HOLDID $QSUBEXTRA tmp/testVARCALLS.qsub
else
    eval tmp/testVARCALLS.qsub
fi
