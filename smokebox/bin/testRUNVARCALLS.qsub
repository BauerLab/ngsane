#!/bin/sh

# the ngsane version to be tested needs to be loaded by hand
. $NGSANE_BASE/conf/header.sh
. bin/tmpl/configVarCall.txt

#clean up earlier runs
for dir in ${DIR[@]}; do
    echo "[NOTE] remove old $dir/bwa"
    if [ -e $dir/bwa ]; then rm -rf $dir/bwa; rm -rf $QOUT/bwa/$dir*; fi
done 

################################################################################
#  BWA
################################################################################

# modify the template config file to flip the RUNBWA switch
# specify the resulting html file
echo "[NOTE] Prep config file tmp/configBWA.txt"
cat bin/tmpl/configVarCall.txt | sed 's/RUNMAPPINGBWA=\"\"/RUNMAPPINGBWA=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryBWA\"/g' > tmp/configBWA.txt

# submit the BWA run to the cluster
JOBIDSBWA=$( trigger.sh tmp/configBWA.txt forcearmed | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] sumitted jobs $(echo -n $JOBIDSBWA)"

################################################################################
#  BAMANN
################################################################################

# modify the template config file to flip the BAMANN switch
# specify the resulting html file
echo "[NOTE] Prep config file tmp/configBAMANN.txt"
cat bin/tmpl/configVarCall.txt | sed 's/RUNANNOTATINGBAM=\"\"/RUNANNOTATINGBAM=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryBAMANN\"/g' > tmp/configBAMANN.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSBWA//:/$QUEUEWAITSEP}\"" >>tmp/configBAMANN.txt

# submit the BAMANN run to the cluster
JOBIDSBAMANN=$( trigger.sh tmp/configBAMANN.txt forcearmed | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] sumitted jobs $(echo -n $JOBIDSBAMANN)"


################################################################################
#  RECAL
################################################################################

# modify the template config file to flip the RUNRECAL switch
# specify the resulting html file
echo "[NOTE] Prep config file tmp/configRECAL.txt"
cat bin/tmpl/configVarCall.txt | sed 's/RUNREALRECAL=\"\"/RUNREALRECAL=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryRECAL\"/g' > tmp/configRECAL.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSBWA//:/$QUEUEWAITSEP}\"" >>tmp/configRECAL.txt

# submit the RECAL run to the cluster
JOBIDSRECAL=$( trigger.sh tmp/configRECAL.txt forcearmed | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] sumitted jobs $(echo -n $JOBIDSRECAL)"


################################################################################
#  VARCALL
################################################################################

# modify the template config file to flip the RUNVARCALLS switch
# specify the resulting html file
echo "[NOTE] Prep config file tmp/configVARCALLS.txt"
cat bin/tmpl/configVarCall.txt | sed 's/RUNVARCALLS=\"\"/RUNVARCALLS=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryVARCALLS\"/g' > tmp/configVARCALLS.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSRECAL//:/$QUEUEWAITSEP}\"" >>tmp/configVARCALLS.txt

# submit the VARCALLS run to the cluster
JOBIDSVARCALL=$( trigger.sh tmp/configVARCALLS.txt forcearmed | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] sumitted jobs $(echo -n $JOBIDSVARCALL)"


################################################################################
# TEST
################################################################################
JOBIDS="$JOBIDSBAMANN:$JOBIDSVARCALL" #other things

HOLDID=" "$QUEUEWAIT${JOBIDS//:/$QUEUEWAITSEP}
cat bin/tmpl/configVarCall.txt | sed 's/RUNVARCALLS=\"\"/RUNVARCALLS=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryVARCALLS\"/g' | \
    sed 's/RUNMAPPINGBWA=\"\"/RUNMAPPINGBWA=\"1\"/g' | \
	sed 's/RUNANNOTATINGBAM=\"\"/RUNANNOTATINGBAM=\"1\"/g' | \
    sed 's/RUNREALRECAL=\"\"/RUNREALRECAL=\"1\"/g' > tmp/configVARCALLS.txt

# prepare the job to generate the html result page and perform the diff 
echo "[NOTE] prepare evaluation script tmp/testVARCALLS.qsub wait for $HOLDID"
sed 's/NAME/VARCALL/g' bin/tmpl/HPCheader.txt > tmp/testVARCALLS.qsub
echo "trigger.sh tmp/configVARCALLS.txt html" >> tmp/testVARCALLS.qsub
echo "diff result/SummaryVARCALLS.html result/expected/SummaryVARCALLS.html | \
	   python bin/diffparser.py > result/diffVARCALLS.txt" >> tmp/testVARCALLS.qsub
#      grep -v \"Last modi\" | grep -v \"\-\-\" | grep -v \"NGSANE\" | \
#      grep -v \"[NOTE]\" | \
#      grep -v \"[0-9]c[0-9]\" > result/diffVARCALLS.txt" >> tmp/testVARCALLS.qsub


chmod 777 tmp/testVARCALLS.qsub

#submit evaluation script
echo "[NOTE] submit evaluation script"
unset module
qsub $HOLDID $QSUBEXTRA tmp/testVARCALLS.qsub
