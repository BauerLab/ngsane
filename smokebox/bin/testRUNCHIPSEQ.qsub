#!/bin/bash

# the ngsane version to be tested needs to be loaded by hand
. $NGSANE_BASE/conf/header.sh
. bin/tmpl/configChIPseq.txt

QSUB_COMMAND=qsub
if [ "$SUBMISSIONSYSTEM" == "SLURM" ]; then QSUB_COMMAND="sbatch"; fi

if [[ -z "$SB_MODE" ]]; then
        if hash ${QSUB_COMMAND} 2>&- ; then SB_MODE="forcearmed"
        else
            SB_MODE="direct";
        fi
fi
echo "[NOTE] run in $SB_MODE mode $(date)"
################################################################################
#  FASTQC
################################################################################

# modify the template config file to flip the RUNFASTQC switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configFASTQC.txt"
cat bin/tmpl/configChIPseq.txt | sed 's/RUNFASTQC=\"\"/RUNFASTQC=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryFASTQC\"/g' > tmp/configFASTQC.txt

# submit the FASTQC run to the cluster
JOBIDSFASTQC=$( trigger.sh tmp/configFASTQC.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSFASTQC)"


################################################################################
#  BOWTIE
################################################################################

# modify the template config file to flip the RUNBOWTIE2 switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configBOWTIE2.txt"
cat bin/tmpl/configChIPseq.txt | sed 's/RUNBOWTIE2=\"\"/RUNBOWTIE2=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryBOWTIE2\"/g' > tmp/configBOWTIE2.txt

# submit the BOWTIE2 run to the cluster
JOBIDSBOWTIE=$( trigger.sh tmp/configBOWTIE2.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSBOWTIE)"

################################################################################
#  BIGWIG
################################################################################

# modify the template config file to flip the RUNBIGWIG switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configBIGWIG.txt"
cat bin/tmpl/configChIPseq.txt | sed 's/RUNBIGWIG=\"\"/RUNBIGWIG=\"1\"/g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryBIGWIG\"/g' > tmp/configBIGWIG.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSBOWTIE//:/$QUEUEWAITSEP}\"" >>tmp/configBIGWIG.txt

# submit the BIGWIG run to the cluster
JOBIDBW=$( trigger.sh tmp/configBIGWIG.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDBW)"

################################################################################
#  PEAKRANGER
################################################################################

# modify the template config file to flip the RUNPEAKRANGER switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configPEAKRANGER.txt"
cat bin/tmpl/configChIPseq.txt | sed 's/RUNPEAKRANGER=\"\"/RUNPEAKRANGER=\"1\"/g' | \
    sed 's/ ChIPseq_input / /g' | \
    sed 's/ ChIPseq_TF / /g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryPEAKRANGER\"/g' > tmp/configPEAKRANGER.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSBOWTIE//:/$QUEUEWAITSEP}\"" >>tmp/configPEAKRANGER.txt

# submit the PEAKRANGER run to the cluster
JOBIDSPR=$( trigger.sh tmp/configPEAKRANGER.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSPR)"


################################################################################
#  MACS2
################################################################################

# modify the template config file to flip the RUNMACS2 switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configMACS2.txt"
cat bin/tmpl/configChIPseq.txt | sed 's/RUNMACS2=\"\"/RUNMACS2=\"1\"/g' | \
    sed 's/ ChIPseq_input / /g' | \
    sed 's/ ChIPseq_Histone / /g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryMACS2\"/g' > tmp/configMACS2.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSBOWTIE//:/$QUEUEWAITSEP}\"" >>tmp/configMACS2.txt

# submit the MACS run to the cluster
JOBIDSMACS=$( trigger.sh tmp/configMACS2.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSMACS) "

################################################################################
#  Homer
################################################################################

# modify the template config file to flip the RUNHOMERCHIPSEQ switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configHOMERCHIPSEQ.txt"
cat bin/tmpl/configChIPseq.txt | sed 's/RUNHOMERCHIPSEQ=\"\"/RUNHOMERCHIPSEQ=\"1\"/g' | \
    sed 's/ ChIPseq_input / /g' | \
    sed 's/ ChIPseq_Histone / /g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryHOMERCHIPSEQ\"/g' > tmp/configHOMERCHIPSEQ.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSBOWTIE//:/$QUEUEWAITSEP}\"" >>tmp/configHOMERCHIPSEQ.txt

# submit the Homer run to the cluster
JOBIDSHOMER=$( trigger.sh tmp/configHOMERCHIPSEQ.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSHOMER) "


################################################################################
#  MEMEchip
################################################################################

# modify the template config file to flip the RUNMEMECHIP switch
# specify the resulting html file
echo "[NOTE] Prep and run config file tmp/configMEMECHIP.txt"
cat bin/tmpl/configChIPseq.txt | sed 's/RUNMEMECHIP=\"\"/RUNMEMECHIP=\"1\"/g' | \
    sed 's/ ChIPseq_input / /g' | \
    sed 's/ ChIPseq_Histone / /g' | \
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryMEMECHIP\"/g' > tmp/configMEMECHIP.txt
echo 'QSUBEXTRA=$QSUBEXTRA'"\" $QUEUEWAIT${JOBIDSMACS/:/$QUEUEWAITSEP}\"" >>tmp/configMEMECHIP.txt

# submit the MEMEchip run to the cluster
JOBIDSMEME=$( trigger.sh tmp/configMEMECHIP.txt $SB_MODE | grep "Jobnumber" | cut -d " " -f 2 | tr '\n' ':' | sed 's/:$//g' )
echo "[NOTE] submitted jobs $(echo -n $JOBIDSMEME)"


################################################################################
# TEST
################################################################################
JOBIDS="$JOBIDSFASTQC:$JOBIDSPR:$JOBIDBW:$JOBIDSMACS:$JOBIDSHOMER:$JOBIDSMEME" #other things

HOLDID=" "$QUEUEWAIT${JOBIDS//:/$QUEUEWAITSEP}
cat bin/tmpl/configChIPseq.txt | \
    sed 's/RUNFASTQC=\"\"/RUNFASTQC=\"1\"/g' |\
    sed 's/RUNBOWTIE2=\"\"/RUNBOWTIE2=\"1\"/g' | \
    sed 's/RUNBIGWIG=\"\"/RUNBIGWIG=\"1\"/g' |\
    sed 's/RUNPEAKRANGER=\"\"/RUNPEAKRANGER=\"1\"/g' |\
    sed 's/RUNMACS2=\"\"/RUNMACS2=\"1\"/g' |\
    sed 's/RUNHOMERCHIPSEQ=\"\"/RUNHOMERCHIPSEQ=\"1\"/g' |\
    sed 's/RUNMEMECHIP=\"\"/RUNMEMECHIP=\"1\"/g' |\
    sed 's/HTMLOUT=\"Summary\"/HTMLOUT=\"result\/SummaryCHIPSEQ\"/g' > tmp/configCHIPSEQ.txt

# Prep and run the job to generate the html result page and perform the diff 
echo "[NOTE] Prep and run evaluation script tmp/testCHIPSEQPR.qsub wait for $HOLDID"
sed 's/NAME/NGs_CHIPSEQ/g' bin/tmpl/HPCheader.txt > tmp/testCHIPSEQ.qsub
echo "trigger.sh tmp/configCHIPSEQ.txt html" >> tmp/testCHIPSEQ.qsub
echo "diff result/SummaryCHIPSEQ.html result/expected/SummaryCHIPSEQ.html | \
       python bin/diffparser.py > result/diffCHIPSEQ.txt" >> tmp/testCHIPSEQ.qsub
#      grep -v \"Last modi\" | grep -v \"\-\-\" | grep -v \"NGSANE\" | \
#      grep -v \"[NOTE]\" | \
#      grep -v \"[0-9]c[0-9]\" > result/diffCHIPSEQ.txt" >> tmp/testCHIPSEQ.qsub


chmod 777 tmp/testCHIPSEQ.qsub

#submit evaluation script
echo "[NOTE] submit or run evaluation script"
if [[ "$SUBMISSIONSYSTEM" = "SGE" ]]; then unset module; fi
if [[ "$SUBMISSIONSYSTEM" = "SLURM" ]]; then grep -v "#PBS" tmp/testCHIPSEQ.qsub > tmp/testCHIPSEQ.qsub.tmp; mv tmp/testCHIPSEQ.qsub.tmp tmp/testCHIPSEQ.qsub; fi
if [[ "$SB_MODE" = "forcearmed" ]]; then
    command="${QSUB_COMMAND} $HOLDID $QSUBEXTRA  tmp/testCHIPSEQ.qsub"
    echo $command && eval $command
else
    eval tmp/testCHIPSEQ.qsub
fi
