#!/bin/bash -e

################################################################################
#  Gene expression analysis with cufflinks
#
# IN : $OUT/$dir/tophat/*.bam
# OUT: $OUT/$dir/cufflinks/*_transcript.gtf
################################################################################       

if [ -n "$RUNCUFFLINKS" ] || [ -n "$NGSANE_PIPELINECALL" ] ; then
    
    ############################################################################
    # Wether to submit a job or compile a report
    if [ -z "$NGSANE_COMPILE_REPORT" ]; then

        # check if resources are properly defined
        if [ -z "$TASK_CUFFLINKS" ] || [ -z "$NODES_CUFFLINKS" ] || [ -z "$CPU_CUFFLINKS" ] || [ -z "$MEMORY_CUFFLINKS" ] || [ -z "$WALLTIME_CUFFLINKS" ]; then echo -e "\e[91m[ERROR]\e[0m Server misconfigured"; exit 1; fi
    
    	JOBIDS=$(
            $QSUB $ARMED $NGSANE_WAITFORJOB -r -k $CONFIG -t $TASK_CUFFLINKS -i $INPUT_CUFFLINKS -e $ASD.bam \
                -n $NODES_CUFFLINKS -c $CPU_CUFFLINKS -m $MEMORY_CUFFLINKS"G" -w $WALLTIME_CUFFLINKS  \
           		--command "${NGSANE_BASE}/mods/cufflinks.sh -k $CONFIG -f <FILE> -o $OUT/<DIR>/$TASK_CUFFLINKS/<SAMPLE>" \
           		--postname "postcommandCuffmerge$MERGED_GTF_NAME" \
            	--postcommand "${NGSANE_BASE}/mods/cuffpost.sh -f <FILE> -k $CONFIG --outdir $OUT/expression/$TASK_CUFFLINKS"
        	) && echo -e "$JOBIDS"
        JOBIDS=$(waitForJobIds "$JOBIDS")
    
        $QSUB $ARMED -r -k $CONFIG -t ${TASK_CUFFLINKS}Cuffquant -i $INPUT_CUFFLINKS -e $ASD.bam \
            -n $NODES_CUFFLINKS -c $CPU_CUFFLINKS -m $MEMORY_CUFFLINKS"G" -w $WALLTIME_CUFFLINKS $JOBIDS \
    		--command "${NGSANE_BASE}/mods/cuffquant.sh -k $CONFIG -f <FILE> -o $OUT/<DIR>/$TASK_CUFFLINKS/<SAMPLE>" \
    		--postname "postcommandCuffnorm$MERGED_GTF_NAME" \
    		--postcommand "${NGSANE_BASE}/mods/cuffnorm.sh -f <FILE> -k $CONFIG --outdir $OUT/expression/$TASK_HTSEQCOUNT"

    
    ############################################################################
    # compile a report for this mod
    elif [ -n "$NGSANE_COMPILE_REPORT" ]; then

        NGSANE_REPORT_HEADER "Cufflinks" "$TASK_CUFFLINKS" "cufflinks.sh,cuffpost.sh"

        NGSANE_REPORT_TABLE "$TASK_CUFFLINKS" \
            "$OUT/<DIR>/$TASK_CUFFLINKS/" \
            ".summary.txt" \
            "PATTERN:Genes::fgrep -w 'genes.fpkm_tracking' | tail -n 1 | sed 's/.* \([0-9]\+\) OK;/\1/g''" \
            "PATTERN:Isoforms::fgrep -w 'isoforms.fpkm_tracking' | tail -n 1 | sed 's/.* \([0-9]\+\) OK;/\1/g''" \
            "PATTERN:Transcripts::fgrep -w 'transcripts.gtf' | cut -f 2" \
            "PATTERN:Skipped::fgrep -w 'skipped.gtf' | cut -f 2"
                        
        NGSANE_REPORT_FOOTER  

        # start a new section for a mod
        NGSANE_REPORT_HEADER "Cuffquant" "$TASK_CUFFLINKS" "cuffquant.sh,cuffnorm.sh"

#        NGSANE_REPORT_TABLE "${TASK_CUFFLINKS}Cuffquant" \
#            "$OUT/<DIR>/${TASK_CUFFLINKS}Cuffquant/" \
#            ".summary.txt" \
#            "PATTERN:Genes::fgrep -w 'genes.fpkm_tracking' | tail -n 1 | sed 's/.* \([0-9]\+\) OK;/\1/g''" \
#            "PATTERN:Isoforms::fgrep -w 'isoforms.fpkm_tracking' | tail -n 1 | sed 's/.* \([0-9]\+\) OK;/\1/g''" \
#            "PATTERN:Transcripts::fgrep -w 'transcripts.gtf' | cut -f 2" \
#            "PATTERN:Skipped::fgrep -w 'skipped.gtf' | cut -f 2"

        NGSANE_REPORT_FOOTER  
  
    fi
fi	

	