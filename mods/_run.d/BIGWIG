#!/bin/bash -e

################################################################################
#   Create Bigwig from Bam
#
# IN : $SOURCE/$dir/INPUT_BIGWIG/*.bam
# OUT: $OUT/$dir/TASK_BIGWIG/*.bw
################################################################################

if [ -n "$RUNBIGWIG" ] || [ -n "$NGSANE_PIPELINECALL" ]; then
    
    ############################################################################
    # Wether to submit a job or compile a report
    if [ -z "$NGSANE_COMPILE_REPORT" ]; then

        # check if resources are properly defined
        if [ -z "$TASK_BIGWIG" ] || [ -z "$NODES_BIGWIG" ] || [ -z "$CPU_BIGWIG" ] || [ -z "$MEMORY_BIGWIG" ] || [ -z "$WALLTIME_BIGWIG" ]; then echo -e "\e[91m[ERROR]\e[0m Server misconfigured"; exit 1; fi
        
        $QSUB $ARMED $NGSANE_WAITFORJOB -r -k $CONFIG -t $TASK_BIGWIG -i $INPUT_BIGWIG -e $ASD.bam \
            -n $NODES_BIGWIG -c $CPU_BIGWIG -m $MEMORY_BIGWIG"G" -w $WALLTIME_BIGWIG \
            --command "${NGSANE_BASE}/mods/bigwig.sh -k $CONFIG -f <FILE> -o $OUT/<DIR>/$TASK_BIGWIG"

    ############################################################################
    # compile a report for this mod
    elif [ -n "$NGSANE_COMPILE_REPORT" ]; then
    
        NGSANE_REPORT_HEADER "Bigwig" "$TASK_BIGWIG" "bigwig.sh" ".bw"

        NGSANE_REPORT_TABLE "$TASK_BIGWIG" \
            "-" \
            "$OUT/<DIR>/$TASK_BIGWIG"  \
            ".bw.stats" \
            "PATTERN!Library size!!sed -n 1p | awk '{print \$(NF)}'" \
            "PATTERN!Normalize to!!sed -n 2p | awk '{print \$(NF)}'" \
            "PATTERN!Scale factor!!sed -n 3p | awk '{print \$(NF)}'" 
            
        NGSANE_REPORT_FOOTER  
        
    fi
       
fi