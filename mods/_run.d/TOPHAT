#!/bin/bash -e

################################################################################
#  Transcript mapping tophat
#
# IN : $SOURCE/$dir/fastq/*read1.fastq
# OUT: $OUT/$dir/tophat/*.bam/
################################################################################       

if [ -n "$RUNTOPHAT" ] || [ -n "$NGSANE_PIPELINECALL" ] ; then
    
    ############################################################################
    # Wether to submit a job or compile a report
    if [ -z "$NGSANE_COMPILE_REPORT" ]; then

        # check if resources are properly defined
        if [ -z "$TASK_TOPHAT" ] || [ -z "$NODES_TOPHAT" ] || [ -z "$CPU_TOPHAT" ] || [ -z "$MEMORY_TOPHAT" ] || [ -z "$WALLTIME_TOPHAT" ]; then echo -e "\e[91m[ERROR]\e[0m Server misconfigured"; exit 1; fi
    
        if [ ! -f ${FASTA%.*}.1.bt2 ];then
            # submit job for index generation if necessary
            INDEXJOBIDS=$(
                $QSUB $ARMED $NGSANE_WAITFORJOB -k $CONFIG -t $TASK_TOPHAT -i $INPUT_TOPHAT -e $READONE.$FASTQ \
                -n $NODES_TOPHAT -c $CPU_TOPHAT -m $MEMORY_TOPHAT"G" \
                -w $WALLTIME_TOPHAT --commontask indexGenome \
                --command "${NGSANE_BASE}/mods/bowtie2Index.sh -k $CONFIG"
            ) && echo -e "$INDEXJOBIDS"
            INDEXJOBIDS=$(waitForJobIds "$INDEXJOBIDS")
        else
            INDEXJOBIDS=$NGSANE_WAITFORJOB
        fi
    
        $QSUB $ARMED -k $CONFIG -t $TASK_TOPHAT -i $INPUT_TOPHAT -e $READONE.$FASTQ -n $NODES_TOPHAT -c $CPU_TOPHAT -m $MEMORY_TOPHAT"G" -w $WALLTIME_TOPHAT $INDEXJOBIDS \
            --command "${NGSANE_BASE}/mods/tophat.sh -k $CONFIG -f <FILE> -o $OUT/<DIR>/$TASK_TOPHAT/<NAME>"

    ############################################################################
    # compile a report for this mod
    elif [ -n "$NGSANE_COMPILE_REPORT" ]; then

        NGSANE_REPORT_HEADER "Tophat" "$TASK_TOPHAT" "tophat.sh" "$ASD.bam"

        NGSANE_REPORT_TABLE "$TASK_TOPHAT" \
            "-" \
            "$OUT/<DIR>/$TASK_TOPHAT"  \
            "$ASD.bam.stats" \
            "LINK!<SAMPLE>$ASD.bam.html" \
            "PATTERN!Total reads!! fgrep -w 'in total' | cut -d' ' -f 1" \
            "PATTERN!Secondary!! fgrep -w 'secondary' | cut -d' ' -f 1" \
            "PATTERN!Qfail!! fgrep -w 'in total' | cut -d' ' -f 3" \
            "PATTERN!Duplicates!! fgrep -w 'duplicates' | cut -d' ' -f 1" \
            "CALCULATE!%!40!#5*100/#2" \
            "PATTERN!Mapped!! fgrep -w 'mapped' | head -n 1 | cut -d' ' -f 1" \
            "CALCULATE!%!40!#7*100/#2" \
            "PATTERN!Mapped pairs!! fgrep -w 'properly paired' | cut -d' ' -f 1 | xargs echo 0.5* | bc " \
            "CALCULATE!%!40!#9*2*100/#2" \
            "PATTERN!Singletons!! fgrep -w 'singletons' | cut -d' ' -f 1" \
            "CALCULATE!%!40!#11*100/#2" \
            "PATTERN!Junction reads!! fgrep -w 'junction reads' | head -n 1 | cut -d' ' -f 1" \
            "CALCULATE!%!40!#13*100/#2" \
            "PATTERN!GTF Junctions!! fgrep -w 'junction reads GTF' | cut -d' ' -f 1" \
            "CALCULATE!%!40!#15*100/#2"
            
        NGSANE_REPORT_FOOTER 
        
    fi
    
fi