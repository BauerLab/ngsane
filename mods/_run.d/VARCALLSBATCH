#!/bin/bash -e

################################################################################
#   call indels with GATK -- call one vcf file over all folders but in batches (by chr)
################################################################################

if [ -n "$RUNVARCALLSBATCH" ] || [ -n "$NGSANE_PIPELINECALL" ]; then

    ############################################################################
    # Wether to submit a job or compile a report
    if [ -z "$NGSANE_COMPILE_REPORT" ]; then
    
    	if [ ! -e "$FASTA.fai" ] ; then echo -e "\e[91m[ERROR]\e[0m $FASTA.fai missing"; exit 1; fi
      	BATCHES=$(cut -f 1 $FASTA.fai | grep -v GL | sort -u)
    	NAME=$(echo ${DIR[@]} | sort -u |sed 's/ /_/g')
    
    	if [[ ! "$ARMED" -eq "postonly" ]]; then
    	  	for i in $BATCHES; do
    			echo "[NOTE] Batch $i"
    			export ADDDUMMY=$i
    	    	JOBID=$( $QSUB $ARMED $NGSANE_WAITFORJOB --postname postcommand$i -r -d -k $CONFIG -t ${TASK_GATKVAR}batch -i $INPUT_GATKVAR  \
    				-e $ASR.bam -n $NODES_GATKVAR -c $CPU_GATKVAR -m $MEMORY_GATKVAR"G" -w $WALLTIME_GATKVAR \
    	        	--postcommand "${NGSANE_BASE}/mods/gatkVARs.sh -k $CONFIG \
    	                        -i <FILE> -t $CPU_GATKVAR \
    	                        -r $FASTA -d $DBSNPVCF -o $OUT/${TASK_GATKVAR}batch/$NAME -n $NAME$ADDDUMMY \
    	                        -H $HAPMAPVCF -L $i " 
    			) && echo -e "$JOBID"
    			if [ -n "$(echo $JOBID | grep Jobnumber)" ]; then JOBIDS=$(waitForJobIds "$JOBID")":"$JOBIDS; fi
    	  	done
    		JOBIDS=${JOBIDS//-W /}
    		JOBIDS=${JOBIDS//::/:}
            [ -n "$JOBIDS" ] && JOBIDS="-W $JOBIDS"
    	fi
    
    	echo "[NOTE] filtered SNPs"
       	$QSUB $ARMED --postname joinedSNP --givenDirs $NAME -d -k $CONFIG -t ${TASK_GATKVAR}batch -i ${TASK_GATKVAR}batch -e filter.snps.vcf $JOBIDS \
    		-n $NODES_VARCOLLECT -c $CPU_VARCOLLECT -m $MEMORY_VARCOLLECT"G" -w $WALLTIME_VARCOLLECT \
    		--postcommand "${NGSANE_BASE}/mods/variantcollect.sh -k $CONFIG -f <FILE> -i1 ${TASK_GATKVAR}batch \
    			-i2 ${TASK_GATKVAR}batch -o $OUT/${TASK_GATKVAR}batch/$NAME --dummy filter.snps.vcf --target filter.snps.vcf"
    
    	echo "[NOTE] filtered INDELs"
       	$QSUB $ARMED --postname joinedINDEL --givenDirs $NAME -d -k $CONFIG -t ${TASK_GATKVAR}batch -i ${TASK_GATKVAR}batch -e filter.snps.vcf $JOBIDS \
    		-n $NODES_VARCOLLECT -c $CPU_VARCOLLECT -m $MEMORY_VARCOLLECT"G" -w $WALLTIME_VARCOLLECT \
    		--postcommand "${NGSANE_BASE}/mods/variantcollect.sh -k $CONFIG -f <FILE> -i1 ${TASK_GATKVAR}batch \
    			-i2 ${TASK_GATKVAR}batch -o $OUT/${TASK_GATKVAR}batch/$NAME --dummy filter.snps.vcf --target filter.indel.vcf"
    
    	echo "[NOTE] recal Vars"
       	$QSUB $ARMED --postname joinedRECAL --givenDirs $NAME -d -k $CONFIG -t ${TASK_GATKVAR}batch -i ${TASK_GATKVAR}batch -e filter.snps.vcf $JOBIDS \
    		-n $NODES_VARCOLLECT -c $CPU_VARCOLLECT -m $MEMORY_VARCOLLECT"G" -w $WALLTIME_VARCOLLECT \
    		--postcommand "${NGSANE_BASE}/mods/variantcollect.sh -k $CONFIG -f <FILE> -i1 ${TASK_GATKVAR}batch \
    			-i2 ${TASK_GATKVAR}batch -o $OUT/${TASK_GATKVAR}batch/$NAME --dummy filter.snps.vcf --target recalfilt.vcf"
       

    ############################################################################
    # compile a report for this mod
    elif [ -n "$NGSANE_COMPILE_REPORT" ]; then

        NGSANE_REPORT_HEADER "VarCallsBatch" "$TASK_GATKVAR" "gatkVARs.sh,variantcollect.sh"
        
        NGSANE_REPORT_TABLE "${TASK_GATKVAR}" \
            "SNPs" \
            "$OUT/$TASK_GATKVAR/$NAME" \
            ".filter.snps.eval.txt" \
            "PATTERN!Total!!fgrep -w 'CountVariants' | sed -n 3p | tr -s ' ' '\t' | cut -f7" \
            "PATTERN!Known!!fgrep -w 'CompOverlap' | sed -n 4p | tr -s ' ' '\t' | cut -f6" \
            "PATTERN!SNPdb Conc!!fgrep -w 'CompOverlap' | sed -n 4p | tr -s ' ' '\t' | cut -f11" \
            "PATTERN!Variant Rate/Bp!!fgrep -w 'CountVariants' | sed -n 4p | tr -s ' ' '\t' | cut -f11" \
            "PATTERN!Het/Hom!!fgrep -w 'CountVariants' | sed -n 4p | tr -s ' ' '\t' | cut -f27" \
            "PATTERN!Novel!!fgrep -w 'CompOverlap' | sed -n 5p | tr -s ' ' '\t' | cut -f6" \
            "PATTERN!Variant Rate/Bp!!fgrep -w 'CountVariants' | sed -n 5p | tr -s ' ' '\t' | cut -f11" \
            "PATTERN!Het/Hom!!fgrep -w 'CountVariants' | sed -n 5p | tr -s ' ' '\t' | cut -f27"


        NGSANE_REPORT_TABLE "${TASK_GATKVAR}" \
            "SNPs after recalibration" \
            "$OUT/$TASK_GATKVAR/$NAME" \
            ".recalfilt.snps.eval.txt" \
            "PATTERN!Total!!fgrep -w 'CountVariants' | sed -n 3p | tr -s ' ' '\t' | cut -f7" \
            "PATTERN!Known!!fgrep -w 'CompOverlap' | sed -n 4p | tr -s ' ' '\t' | cut -f6" \
            "PATTERN!SNPdb Conc!!fgrep -w 'CompOverlap' | sed -n 4p | tr -s ' ' '\t' | cut -f11" \
            "PATTERN!Variant Rate/Bp!!fgrep -w 'CountVariants' | sed -n 4p | tr -s ' ' '\t' | cut -f11" \
            "PATTERN!Het/Hom!!fgrep -w 'CountVariants' | sed -n 4p | tr -s ' ' '\t' | cut -f27" \
            "PATTERN!Novel!!fgrep -w 'CompOverlap' | sed -n 5p | tr -s ' ' '\t' | cut -f6" \
            "PATTERN!Variant Rate/Bp!!fgrep -w 'CountVariants' | sed -n 5p | tr -s ' ' '\t' | cut -f11" \
            "PATTERN!Het/Hom!!fgrep -w 'CountVariants' | sed -n 5p | tr -s ' ' '\t' | cut -f27"


        NGSANE_REPORT_TABLE "${TASK_GATKVAR}" \
            "Indels" \
            "$OUT/$TASK_GATKVAR/$NAME" \
            ".filter.indel.eval.txt" \
            "PATTERN!Total!!fgrep -w 'CountVariants' | sed -n 3p | tr -s ' ' '\t' | cut -f7" \
            "PATTERN!Known!!fgrep -w 'CompOverlap' | sed -n 4p | tr -s ' ' '\t' | cut -f6" \
            "PATTERN!SNPdb Conc!!fgrep -w 'CompOverlap' | sed -n 4p | tr -s ' ' '\t' | cut -f11" \
            "PATTERN!Variant Rate/Bp!!fgrep -w 'CountVariants' | sed -n 4p | tr -s ' ' '\t' | cut -f11" \
            "PATTERN!Het/Hom!!fgrep -w 'CountVariants' | sed -n 4p | tr -s ' ' '\t' | cut -f27" \
            "PATTERN!Novel!!fgrep -w 'CompOverlap' | sed -n 5p | tr -s ' ' '\t' | cut -f6" \
            "PATTERN!Variant Rate/Bp!!fgrep -w 'CountVariants' | sed -n 5p | tr -s ' ' '\t' | cut -f11" \
            "PATTERN!Het/Hom!!fgrep -w 'CountVariants' | sed -n 5p | tr -s ' ' '\t' | cut -f27"
       
        NGSANE_REPORT_FOOTER 
  
    fi
fi	

	